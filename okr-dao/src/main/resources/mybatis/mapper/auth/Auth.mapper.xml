<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmb.okr.dao.domain.auth.Auth">
	<resultMap type="Auth" id="baseResultMap">
		<result property="id" column="id"  jdbcType="VARCHAR"/>
		<result property="authCode" column="auth_code"  jdbcType="VARCHAR"/>
		<result property="authDescp" column="auth_descp"  jdbcType="VARCHAR"/>
		<result property="createId" column="create_id"  jdbcType="VARCHAR"/>
		<result property="createTime" column="create_time"  jdbcType="DATE"/>
		<result property="lastModifiedId" column="last_modified_id"  jdbcType="VARCHAR"/>
		<result property="lastModifiedTime" column="last_modified_time"  jdbcType="DATE"/>
	</resultMap>

	<sql id="selectSql">
		SELECT
		id AS id,
		<trim prefix="" suffixOverrides=",">
			auth_code AS authCode,
			auth_descp AS authDescp,
			create_id AS createId,
			create_time AS createTime,
			last_modified_id AS lastModifiedId,
			last_modified_time AS lastModifiedTime,
		</trim>
		FROM auth
	</sql>

	<sql id="whereSql">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="authCode != null">
				AND auth_code = #{authCode}
			</if>
			<if test="authDescp != null">
				AND auth_descp = #{authDescp}
			</if>
			<if test="createId != null">
				AND create_id = #{createId}
			</if>
			<if test="createTime != null">
				AND create_time = #{createTime}
			</if>
			<if test="lastModifiedId != null">
				AND last_modified_id = #{lastModifiedId}
			</if>
			<if test="lastModifiedTime != null">
				AND last_modified_time = #{lastModifiedTime}
			</if>
		</trim>
	</sql>

	<sql id="whereSqlPaging">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="param.authCode != null">
				AND auth_code = #{param.authCode}
			</if>
			<if test="param.authDescp != null">
				AND auth_descp = #{param.authDescp}
			</if>
			<if test="param.createId != null">
				AND create_id = #{param.createId}
			</if>
			<if test="param.createTime != null">
				AND create_time = #{param.createTime}
			</if>
			<if test="param.lastModifiedId != null">
				AND last_modified_id = #{param.lastModifiedId}
			</if>
			<if test="param.lastModifiedTime != null">
				AND last_modified_time = #{param.lastModifiedTime}
			</if>
		</trim>
	</sql>

	<sql id="updateSql">
		UPDATE auth
		<trim prefix="SET" suffixOverrides=",">
			<if test="authCode != null">
				auth_code = #{authCode},
			</if>
			<if test="authDescp != null">
				auth_descp = #{authDescp},
			</if>
			<if test="createId != null">
				create_id = #{createId},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="lastModifiedId != null">
				last_modified_id = #{lastModifiedId},
			</if>
			<if test="lastModifiedTime != null">
				last_modified_time = #{lastModifiedTime},
			</if>
		</trim>
	</sql>

	<sql id="deleteSql">
		DELETE from auth
	</sql>

	<sql id="insertColume">
		<trim prefix="" suffixOverrides=",">
			id,
			<if test="authCode != null">
				auth_code,
			</if>
			<if test="authDescp != null">
				auth_descp,
			</if>
			<if test="createId != null">
				create_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="lastModifiedId != null">
				last_modified_id,
			</if>
			<if test="lastModifiedTime != null">
				last_modified_time,
			</if>
		</trim>
	</sql>

	<sql id="insertValue">
		<trim prefix="" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="authCode != null">
				#{authCode},
			</if>
			<if test="authDescp != null">
				#{authDescp},
			</if>
			<if test="createId != null">
				#{createId},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="lastModifiedId != null">
				#{lastModifiedId},
			</if>
			<if test="lastModifiedTime != null">
				#{lastModifiedTime},
			</if>
		</trim>
	</sql>

	<sql id="pagingSql">
		<trim prefix="" suffixOverrides=",">
			<if test="limit != null">
				limit #{offset},#{limit}
			</if>
		</trim>
	</sql>

	<insert id="insert" parameterType="Auth" >
		INSERT INTO auth(
		<include refid="insertColume"/>
		) VALUE (
		<include refid="insertValue"/>
		)
	</insert>

	<update id="update" parameterType="Auth">
		<include refid="updateSql" />
		WHERE ID = #{id}
	</update>

	<delete id="delete" parameterType="Auth">
		<include refid="deleteSql" />
		<include refid="whereSql" />
	</delete>

	<select id="load" parameterType="Auth" resultType="Auth">
		<include refid="selectSql" />
		<include refid="whereSql" />
	</select>

	<select id="queryForAll" parameterType="Auth" resultType="Auth">
		<include refid="selectSql" />
		<include refid="whereSql" />
	</select>

	<select id="selectCount" parameterType="Auth"
			resultType="Integer">
		SELECT COUNT(1) AS count FROM auth
		<include refid="whereSql" />
	</select>

	<select id="countForPage" parameterType="PagingParam"
			resultType="Integer">
		SELECT COUNT(1) AS count FROM auth
		<include refid="whereSqlPaging" />
	</select>

	<select id="queryForPage" parameterType="PagingParam" resultType="Auth">
		<include refid="selectSql" />
		<include refid="whereSqlPaging" />
		<include refid="pagingSql" />
	</select>

</mapper>
